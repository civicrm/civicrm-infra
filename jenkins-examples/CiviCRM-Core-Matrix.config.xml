<?xml version='1.1' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.14">
  <actions/>
  <description>&lt;p&gt;The test jobs are organized into two groups. The first group tests proposed changes (&quot;pull-requests&quot; or &quot;PRs&quot;) as soon as they are proposed. They are generally less thorough but more prompt.&lt;/p&gt;&#xd;
&#xd;
&lt;ul&gt;&#xd;
  &lt;li&gt;&lt;u&gt;CiviCRM-Core-PR&lt;/u&gt; - A job which runs immediately after a PR is submitted to &lt;b&gt;&lt;code&gt;civicrm-core.git&lt;/code&gt;&lt;/b&gt;. It executes a subset of tests.&lt;/li&gt;&#xd;
  &lt;li&gt;&lt;u&gt;CiviCRM-Drupal-PR&lt;/u&gt; - A job which runs immediately after a PR is submitted to &lt;b&gt;&lt;code&gt;civicrm-drupal.git&lt;/code&gt;&lt;/b&gt;. It executes the Drupal-specific tests and subset of other tests.&lt;/li&gt;&#xd;
  &lt;li&gt;&lt;u&gt;CiviCRM-Packages-PR&lt;/u&gt; - A job which runs immediate after a PR is submitted to &lt;b&gt;&lt;code&gt;civicrm-packages.git&lt;/code&gt;&lt;/b&gt;. It executes a subset of tests.&lt;/li&gt;&#xd;
  &lt;li&gt;&lt;u&gt;CiviCRM-Backdrop-PR&lt;/u&gt; - A job which runs immediately after a PR is submitted to &lt;b&gt;&lt;code&gt;civicrm-backdrop.git&lt;/code&gt;&lt;/b&gt;. It executes the Backdrop-specific tests and subset of other tests.&lt;/li&gt;&#xd;
  &lt;li&gt;(Wishlist) &lt;s&gt;&lt;u&gt;CiviCRM-WordPress-PR&lt;/u&gt; - A job which runs immediately after a PR is submitted to &lt;b&gt;&lt;code&gt;civicrm-wordpress.git&lt;/code&gt;&lt;/b&gt;. It executes the WordPress-specific tests and subset of other tests.&lt;/s&gt;&lt;/li&gt;&#xd;
&lt;/ul&gt;&#xd;
&#xd;
&lt;p&gt;The second group tests the canonical code on a periodic basis. They are more thorough but less prompt.&lt;/p&gt;&#xd;
&#xd;
&lt;ul&gt;&#xd;
  &lt;li&gt;&lt;u&gt;CiviCRM-Core-Matrix&lt;/u&gt; - A job which runs periodically (eg every 6hr) and executes all unit-tests and upgrade-tests across all versions.&lt;/li&gt;&#xd;
  &lt;li&gt;&lt;u&gt;CiviCRM-WebTest-Matrix&lt;/u&gt; - A job which runs periodically (eg every 24hr) and executes WebTests across all versions.&lt;/li&gt;&#xd;
&lt;/ul&gt;&#xd;
&#xd;
&lt;p&gt;The &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; profiles represent different combinations of higher/lower versions of PHP/MySQL. For a current formal defintion, see &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/totten/bknix/tree/master/profiles&quot;&gt;bknix/profiles&lt;/a&gt;.&lt;/p&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>14</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <jenkins.advancedqueue.priority.strategy.PriorityJobProperty plugin="PrioritySorter@3.6.0">
      <useJobPriority>false</useJobPriority>
      <priority>-1</priority>
    </jenkins.advancedqueue.priority.strategy.PriorityJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition plugin="matrix-combinations-parameter@1.3.0">
          <name>paramFilter</name>
          <description></description>
          <shortcutList>
            <hudson.plugins.matrix__configuration__parameter.shortcut.ResultShortcut>
              <name>Successful</name>
              <exact>false</exact>
              <resultsToCheck>
                <string>SUCCESS</string>
              </resultsToCheck>
            </hudson.plugins.matrix__configuration__parameter.shortcut.ResultShortcut>
            <hudson.plugins.matrix__configuration__parameter.shortcut.ResultShortcut>
              <name>Failed</name>
              <exact>false</exact>
              <resultsToCheck>
                <string>FAILURE</string>
              </resultsToCheck>
            </hudson.plugins.matrix__configuration__parameter.shortcut.ResultShortcut>
            <hudson.plugins.matrix__configuration__parameter.shortcut.MatrixCombinationsShortcut_-All/>
            <hudson.plugins.matrix__configuration__parameter.shortcut.MatrixCombinationsShortcut_-None/>
          </shortcutList>
        </hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>0 1 * * *
0 7 * * *
0 13 * * *
0 19 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>bknix-tmp</string>
      </values>
    </hudson.matrix.LabelAxis>
    <hudson.matrix.TextAxis>
      <name>CIVIVER</name>
      <values>
        <string>5.7</string>
        <string>5.13</string>
        <string>5.14</string>
        <string>5.15</string>
        <string>master</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>BKPROF</name>
      <values>
        <string>min</string>
        <string>max</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>(BKPROF==&quot;min&quot;) || (BKPROF==&quot;max&quot; &amp;&amp; CIVIVER!=&quot;4.6&quot;)</combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
set -ex

if [ -e $HOME/.profile ]; then . $HOME/.profile; fi
case &quot;$BKPROF&quot; in min|max|dfl) eval $(use-bknix &quot;$BKPROF&quot;) ;; esac
if [ -z &quot;$BKITBLD&quot; ]; then echo &quot;Invalid BKPROF&quot;; exit 1; fi

## Job Name: CiviCRM-Core-Matrix
## Job Description: Periodically run the unit tests on all major
##   major branches of civicrm-core.git
## Job GitHub Project URL: https://github.com/civicrm/civicrm-core
## Job Source Code Management: None
## Job Triggers: Scheduled
## Job xUnit Files: WORKSPACE/junit/*.xml
## Useful vars: $CIVIVER (e.g. &quot;4.5&quot;, &quot;4.6&quot;, &quot;master&quot;)
## Pre-requisite: Install civicrm-buildkit; configure amp
## Pre-requisite: Configure /etc/hosts and Apache with &quot;build-1.l&quot;, &quot;build-2.l&quot;, ..., &quot;build-6.l&quot;

BLDNAME=&quot;build-$EXECUTOR_NUMBER&quot;
EXITCODE=0

## Reset (cleanup after previous tests)
[ -d &quot;$WORKSPACE/junit&quot; ] &amp;&amp; rm -rf &quot;$WORKSPACE/junit&quot;
[ -d &quot;$WORKSPACE/civibuild-html&quot; ] &amp;&amp; rm -rf &quot;$WORKSPACE/civibuild-html&quot;
if [ -d &quot;$BKITBLD/$BLDNAME&quot; ]; then
  echo y | civibuild destroy &quot;$BLDNAME&quot;
fi
mkdir &quot;$WORKSPACE/junit&quot;
mkdir &quot;$WORKSPACE/civibuild-html&quot;

## Download application (with civibuild)
civibuild download &quot;$BLDNAME&quot; \
  --civi-ver &quot;$CIVIVER&quot; \
  --type &quot;drupal-clean&quot;

## Install application (with civibuild)
civibuild install &quot;$BLDNAME&quot; \
  --admin-pass &quot;n0ts3cr3t&quot;

## Report details about this build of the application
civibuild show &quot;$BLDNAME&quot; \
  --html &quot;$WORKSPACE/civibuild-html&quot; \
  --last-scan &quot;$WORKSPACE/last-scan.json&quot; \
  --new-scan &quot;$WORKSPACE/new-scan.json&quot;
cp &quot;$WORKSPACE/new-scan.json&quot; &quot;$WORKSPACE/last-scan.json&quot;

## Detect &amp; execute tests
pushd &quot;$BKITBLD/$BLDNAME/sites/all/modules/civicrm&quot;
  SUITES=&quot;phpunit-crm phpunit-api phpunit-civi upgrade&quot;

  if [ -f &quot;tests/phpunit/E2E/AllTests.php&quot; ]; then
    SUITES=&quot;$SUITES phpunit-e2e&quot;
  else
    echo &quot;Skip unavailable suite: phpunit-e2e&quot;
  fi

  if [ -f &quot;karma.conf.js&quot; ]; then
    SUITES=&quot;$SUITES karma&quot;
  else
    echo &quot;Skip unavailable suite: karma&quot;
  fi
popd

civi-test-run -b &quot;$BLDNAME&quot; -j &quot;$WORKSPACE/junit&quot; $SUITES
exit $?
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.18">
      <reportTargets>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>CiviBuild</reportName>
          <reportDir>civibuild-html</reportDir>
          <reportFiles>index.html</reportFiles>
          <alwaysLinkToLastBuild>false</alwaysLinkToLastBuild>
          <reportTitles></reportTitles>
          <keepAll>true</keepAll>
          <allowMissing>false</allowMissing>
          <includes>**/*</includes>
          <escapeUnderscores>true</escapeUnderscores>
        </htmlpublisher.HtmlPublisherTarget>
      </reportTargets>
    </htmlpublisher.HtmlPublisher>
    <xunit plugin="xunit@1.99">
      <types>
        <JUnitType>
          <pattern>junit/*.xml</pattern>
          <skipNoTestFiles>false</skipNoTestFiles>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds>
        <org.jenkinsci.plugins.xunit.threshold.FailedThreshold>
          <unstableThreshold></unstableThreshold>
          <unstableNewThreshold></unstableNewThreshold>
          <failureThreshold>1</failureThreshold>
          <failureNewThreshold></failureNewThreshold>
        </org.jenkinsci.plugins.xunit.threshold.FailedThreshold>
        <org.jenkinsci.plugins.xunit.threshold.SkippedThreshold>
          <unstableThreshold></unstableThreshold>
          <unstableNewThreshold></unstableNewThreshold>
          <failureThreshold></failureThreshold>
          <failureNewThreshold></failureNewThreshold>
        </org.jenkinsci.plugins.xunit.threshold.SkippedThreshold>
      </thresholds>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>3600</timeoutSecondsString>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>
