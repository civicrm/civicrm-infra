---

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - icinga2
    - monitoring-plugins-basic # required for check_apt
    - nagios-plugins-contrib # for mysql checks
  tags:
    - icinga2
    - packages
  when: ansible_distribution == "Debian"

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - icinga2
    - nagios-plugins
    - libnagios-plugin-perl
    - nagios-plugins-contrib # for mysql checks
  tags:
    - icinga2
    - packages
  when: ansible_distribution == "Ubuntu"

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - nagios-plugins-contrib # for mysql checks
  tags:
    - icinga2-mysql

- name: Deploy icinga2 basic configuration files
  template: src="etc/icinga2/{{ item }}" dest="/etc/icinga2/{{ item }}" owner=root group=root mode=0644
  with_items:
    - constants.conf
    - icinga2.conf
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-base-configs

- file: path=/etc/icinga2/pki state=directory owner=root group={{ icinga2_user }} mode=0770

- name: Run icinga2 pki new-cert for our host
  shell: icinga2 pki new-cert --cn {{Â inventory_hostname }} --key /etc/icinga2/pki/{{ inventory_hostname }}.key --cert /etc/icinga2/pki/{{ inventory_hostname }}.crt
  args:
    creates: /etc/icinga2/pki/{{ inventory_hostname }}.key
  tags:
    - icinga2
    - icinga2-cert

- name: Run icinga2 pki save-cert
  shell: icinga2 pki save-cert --key /etc/icinga2/pki/{{ inventory_hostname }}.key --cert /etc/icinga2/pki/{{ inventory_hostname }}.crt --trustedcert /etc/icinga2/pki/trusted-master.crt --host {{ icinga2_main_node }}
  args:
    creates: "/etc/icinga2/pki/trusted-master.crt"
  tags:
    - icinga2
    - icinga2-cert

- name: Run icinga2 pki ticket
  shell: icinga2 pki ticket --cn {{ inventory_hostname }}
  delegate_to: "{{ icinga2_main_node }}"
  register: ticket
  tags:
    - icinga2
    - icinga2-cert

- shell: icinga2 pki request --host {{ icinga2_main_node }} --ticket {{ ticket.stdout }} --key /etc/icinga2/pki/{{ inventory_hostname }}.key --cert /etc/icinga2/pki/{{ inventory_hostname }}.crt --trustedcert /etc/icinga2/pki/trusted-master.crt --ca /etc/icinga2/pki/ca.crt
  args:
    creates: "/etc/icinga2/pki/ca.crt"
  tags:
    - icinga2
    - icinga2-cert

- template: src=zones.conf dest=/etc/icinga2/zones.conf owner=root group=root mode=0644
  notify: restart icinga2

- name: Enable the Icinga2 API
  shell: icinga2 feature enable api
  args:
    creates: /etc/icinga2/features-enabled/api.conf
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-api

- template: src=features-available/api.conf dest=/etc/icinga2/features-available/api.conf owner=root group=root mode=0644
  notify: restart icinga2

- template: src=zones.d/hostzone-for-master.conf dest=/etc/icinga2/zones.d/{{ inventory_hostname }}.conf owner=root group=root mode=0644
  delegate_to: "{{ icinga2_main_node }}"
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-cert

- name: Disable Icinga2 notifications
  shell: icinga2 feature disable notification
  args:
    removes: /etc/icinga2/features-enabled/notification.conf
  notify: restart icinga2
  tags:
    - icinga2

## Custom scripts
##
## We deploy the scripts to /usr/local/lib/icinga2-plugins
## because some are run by less-privileged users and might not have access to /etc/icinga2
- file: path="{{ item }}" state=directory owner=root group={{ icinga2_user }} mode=0755
  with_items:
    - /etc/icinga2/conf.d/services
    - /etc/icinga2/conf.d/commands
    - /usr/local/lib/icinga2-plugins
  tags:
    - icinga2
    - icinga2-custom-checks

- name: Deploy custom checks
  copy: src="etc/icinga2/scripts/{{ item }}" dest="/usr/local/lib/icinga2-plugins/{{ item }}" owner=root group=root mode=0755
  with_items:
    - check_aegir_disk
    - check_aegir_sql
    - check_aegir_civicrm_contacts
    - check_aegir_civicrm_activities
    - check_aegir_civicrm_contributions
    - check_aegir_civicrm_memberships
    - check_aegir_civicrm_mailings
    - check_aegir_civicrm_cases
    - check_aegir_civicrm_events
    - check_aegir_civicrm_participants
    - check_backup
    - check_bandwidth
    - check_civicrm
    - check_cmsversion
    - check_file_content
    - check_memory
    - check_md_raid
    - check_mysqldump-secure
    - check_ssl_cert
    - check_ufw
    - check_zpool
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-custom-checks

- name: Deploy custom checks configurations
  template: src="etc/icinga2/conf.d/commands/{{ item }}.conf" dest="/etc/icinga2/conf.d/commands/{{ item }}.conf" owner=root group=root mode=0644
  with_items:
    - aegir_disk
    - aegir_sql
    - aegir_civicrm_contacts
    - aegir_civicrm_activities
    - aegir_civicrm_contributions
    - aegir_civicrm_memberships
    - aegir_civicrm_mailings
    - aegir_civicrm_cases
    - aegir_civicrm_events
    - aegir_civicrm_participants
    - backup
    - bandwidth
    - civicrm
    - cmsversion
    - file_content
    - mem
    - md_raid
    - mysqldump
    - mysql_uptime
    - ssl_cert
    - ufw
    - zpool
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-custom-checks

- template: src="etc/sudoers.d/{{ item }}" dest="/etc/sudoers.d/{{ item }}" owner=root group=root mode=0440
  with_items:
    - aegir-icinga2
    - backup-icinga2
    - mdadm-icinga2
    - mysql-icinga2
    - zfs-icinga2
    - ufw-icinga2
  tags:
    - icinga2
    - icinga2-custom-checks

# Remove old location for those configurations
- file: path=/etc/icinga2/conf.d/services/civicrm.conf state=absent
  tags:
    - icinga2
    - icinga2-custom-checks

- file: path=/etc/icinga2/conf.d/services/mem.conf state=absent
  tags:
    - icinga2
    - icinga2-custom-checks
