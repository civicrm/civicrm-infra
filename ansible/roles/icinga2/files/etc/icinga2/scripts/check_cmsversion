#!/usr/bin/php
<?php

$host = trim($argv[1]);
$cms = trim($argv[2]);
$minimum = trim($argv[3]);

if (empty($host)) {
  echo 'Missing host argument.';
  exit(3);
}

if (empty($minimum)) {
  echo 'Missing minimum version argument.';
  exit(3);
}

$tmp = '';

if ($cms == 'drupal' || $cms == 'drupal8') {
  exec('sudo -u aegir /usr/local/bin/drush @' . escapeshellarg($host) . ' status version --format=json', $tmp);
}
elseif ($cms == 'wordpress') {
  exec('sudo -u aegir /usr/local/bin/drush @' . escapeshellarg($host) . ' wp core version', $tmp);
}
else {
  echo 'Unsupported CMS: ' . $cms;
  exit(3);
}

if (empty($tmp)) {
  if ($cms == 'drupal' || $cms == 'drupal8') {
    exec('sudo -u aegir /usr/local/bin/drush @' . escapeshellarg($host) . ' cc drush');
    echo 'Failed to check status (2). Drush cache flushed for the next run.';
  }
  else {
    echo 'Failed to check status (2).';
  }

  exit(3);
}

$version = '';

if ($cms == 'drupal' || $cms == 'drupal8') {
  // Drush returns a multi-line json string. To decode, it must be imploded first.
  $tmp = implode(' ', $tmp);
  $data = json_decode($tmp, TRUE);

  if (empty($data)) {
    if ($cms == 'drupal' || $cms == 'drupal8') {
      exec('sudo -u aegir /usr/local/bin/drush @' . escapeshellarg($host) . ' cc drush');
      echo 'Failed to check status (1). Drush cache flushed for the next run.';
    }
    else {
      echo 'Failed to check status (1).';
    }

    exit(3);
  }

  $version = $data['drupal-version'];
}
elseif ($cms == 'wordpress') {
  $version = $tmp[0];
}

if (version_compare($version, $minimum, '>=')) {
  echo 'OK ' . $version;
  exit(0);
}
else {
  echo 'ERROR ' . $version;
  exit(2);
}
