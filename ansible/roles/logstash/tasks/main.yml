---
- apt_key:
    url=https://packages.elasticsearch.org/GPG-KEY-elasticsearch
    state=present

- apt_repository:
    repo='deb https://packages.elastic.co/elasticsearch/2.x/debian stable main'
    state=present

- apt_repository:
    repo='deb https://packages.elastic.co/logstash/2.3/debian stable main'
    state=present

- apt_repository:
    repo='deb http://packages.elastic.co/kibana/4.5/debian stable main'
    state=present
    update_cache=yes

# Ubuntu 16.04 LTS has jdk 8 or 9, but 9 has weirdness with logstash
- apt: pkg=openjdk-8-jre-headless state=installed
  when: ansible_distribution == "Ubuntu" and ansible_lsb.major_release == "16"

# Debian Jessie
- apt: pkg=openjdk-8-jre state=installed
  when: ansible_distribution == "Debian"

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - logstash
    - elasticsearch
    - kibana
    - geoip-database # for maps of clientips
  tags:
    - packages

- name: Logstash conf.d configurations
  template:
    src: "{{ item }}"
    dest: "/etc/logstash/conf.d/{{ item }}"
    owner: "root"
    group: "root"
    mode: 0644
  with_items:
    - 01-lumberjack-input.conf
    - 10-syslog.conf
    - 11-nginx.conf
    - 30-lumberjack-output.conf

- name: Create the logstash pattern directory
  file: path=/opt/logstash/patterns state=directory mode=0755 owner=logstash group=logstash

- name: Deploy nginx patterns for logstash
  copy:
    src: "patterns/{{ item }}"
    dest: "/opt/logstash/patterns/{{ item }}"
    owner: logstash
    group: logstash
    mode: 0644
  with_items:
    - nginx

- name: Open the lumberjack port for our machines only
  ufw: proto=tcp port=5000 rule=allow src={{ item }}
  with_items: logstash_server_allow_ips

- name: Add logstash user to the ssl-cert group.
  user: name=logstash groups="ssl-cert" append=yes

- name: Restart Elastic Search.
  service: name=elasticsearch state=restarted

- name: Restart Logstash.
  service: name=logstash state=restarted

# Nginx configuration
- apt: pkg=nginx state=installed
- apt: pkg=python-passlib state=installed
- apt: pkg=pwgen state=installed

- name: Check if a htpasswd was already created.
  stat: path=/root/kibana-password
  register: kibana_password_file

- name: Generate a password for the htpasswd restriction.
  shell: pwgen 15 1 > /root/kibana-password
  when: kibana_password_file.stat.exists == False

# Password protect access to Kibana using htpasswd.
# Password will be stored on the server, in /root/kibana-password.
- name: Read the password and store in variable.
  shell: cat {{ "/root/kibana-password" }}
  register: kibana_password

- htpasswd:
    path=/etc/nginx/htpasswd-kibana.users
    name=civicrm password="{{ kibana_password.stdout }}"
    owner=root group=www-data mode=0640

- name: Deploy the nginx vhost configuration.
  template:
    src: "nginx-vhost.j2"
    dest: "/etc/nginx/sites-available/{{ logstash_server_name }}"
    owner: "root"
    group: "root"
    mode: 0644

- name: Enable the vhost (create a symlink).
  file: src=/etc/nginx/sites-available/{{ logstash_server_name }} dest=/etc/nginx/sites-enabled/{{ logstash_server_name }} state=link
  notify: restart nginx
